dashboard_Devices.php :
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Dashboard Devices</title>
    <link rel="stylesheet" href="dashboard_Devices.css">
    <script src="dashboard_Devices.js"></script>
</head>
<body>
    <div class="container">
        <?php
        include 'db.php';

        // Récupérer tous les modèles classés par ordre alphabétique
        $models_query = "SELECT model_name FROM models ORDER BY model_name ASC";
        $models_result = $conn->query($models_query);

        if ($models_result->num_rows > 0) {
            while ($model = $models_result->fetch_assoc()) {
                $model_name = htmlspecialchars($model['model_name'], ENT_QUOTES, 'UTF-8');
                echo "<div class='model-section'>";
                echo "<h2>$model_name <button class='add-btn' onclick='showAddDeviceModal(\"$model_name\")'>Add Device</button></h2>";

                // Récupérer tous les devices associés à ce modèle classés par ordre alphabétique
                $devices_query = "SELECT * FROM `" . $conn->real_escape_string($model['model_name']) . "` ORDER BY device_name ASC";
                $devices_result = $conn->query($devices_query);

                if ($devices_result->num_rows > 0) {
                    echo "<ul class='devices-list'>";
                    while ($device = $devices_result->fetch_assoc()) {
                        $device_name = htmlspecialchars($device['device_name'], ENT_QUOTES, 'UTF-8');
                        $device_image = htmlspecialchars($device['device_image'], ENT_QUOTES, 'UTF-8');
                        $device_id = $device['device_id']; // Récupérer l'ID de l'appareil
                        echo "<li>";
                        echo "<img src='$device_image' width='50' alt='Device Image'>";
                        echo "<span class='device-name'>$device_name</span>";
                        echo "<button class='edit-btn' onclick='showEditDeviceModal(\"$model_name\", \"$device_id\")'>Edit</button>"; // Utiliser device_id ici
                        echo "<button class='delete-btn' onclick='deleteDevice(\"$model_name\", \"$device_id\")'>Delete</button>"; // Utiliser device_id ici
                        echo "</li>";
                    }
                    echo "</ul>";
                } else {
                    echo "<p>No devices found for this model.</p>";
                }

                echo "</div>";
            }
        } else {
            echo "<p>No models found.</p>";
        }
        ?>
    </div>

    <div id="addDeviceModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('addDeviceModal')">&times;</span>
            <h2>Add Device</h2>
            <form id="addDeviceForm" action="device_manage/add_device.php" method="post" enctype="multipart/form-data">
                <input type="hidden" id="model_name" name="model_name">
                <div id="deviceFields"></div>
                <label for="device_image">Device Image:</label>
                <input type="file" id="device_image" name="device_image" required>
                <input type="submit" value="Add Device">
            </form>
        </div>
    </div>

    <div id="editDeviceModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal('editDeviceModal')">&times;</span>
            <h2>Edit Device</h2>
            <form id="editDeviceForm" action="device_manage/update_device.php" method="post" enctype="multipart/form-data">
                <input type="hidden" id="edit_model_name" name="model_name">
                <input type="hidden" id="edit_device_id" name="device_id">
                <div id="editDeviceFields"></div>
                <label for="edit_device_image">Device Image:</label>
                <input type="file" id="edit_device_image" name="device_image">
                <input type="submit" value="Update Device">
            </form>
        </div>
    </div>

</body>
</html>


dashboard_Devices.js :
// Fonction pour afficher le modal d'ajout de device
function showAddDeviceModal(modelName) {
    document.getElementById('model_name').value = modelName;
    const deviceFieldsContainer = document.getElementById('deviceFields');

    // Vider les champs existants
    deviceFieldsContainer.innerHTML = '';

    fetch(`get_device_fields.php?model_name=${encodeURIComponent(modelName)}`)
        .then(response => response.json())
        .then(data => {
            data.forEach(field => {
                if (field.column_name !== 'device_image') {
                    const fieldLabel = document.createElement('label');
                    fieldLabel.textContent = field.name;
                    const fieldInput = document.createElement('input');
                    fieldInput.type = 'text';
                    fieldInput.name = field.column_name;

                    if (field.column_name === 'device_name') {
                        fieldInput.required = true;
                    }

                    deviceFieldsContainer.appendChild(fieldLabel);
                    deviceFieldsContainer.appendChild(fieldInput);
                    deviceFieldsContainer.appendChild(document.createElement('br'));
                }
            });
        })
        .catch(error => console.error('Erreur lors de la récupération des champs :', error));

    document.getElementById('addDeviceModal').style.display = 'block';
}

// Fonction pour fermer les modals
function closeModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}

// Fonction pour afficher le modal de modification de device
function showEditDeviceModal(modelName, deviceId) {
    document.getElementById('edit_model_name').value = modelName;
    document.getElementById('edit_device_id').value = deviceId;
    const editDeviceFieldsContainer = document.getElementById('editDeviceFields');

    // Vider les champs existants
    editDeviceFieldsContainer.innerHTML = '';

    fetch(`get_device_fields.php?model_name=${encodeURIComponent(modelName)}&device_id=${encodeURIComponent(deviceId)}`)
        .then(response => response.json())
        .then(data => {
            data.forEach(field => {
                if (field.column_name !== 'device_image') {
                    const fieldLabel = document.createElement('label');
                    fieldLabel.textContent = field.name;
                    const fieldInput = document.createElement('input');
                    fieldInput.type = 'text';
                    fieldInput.name = field.column_name;
                    fieldInput.value = field.value || '';

                    editDeviceFieldsContainer.appendChild(fieldLabel);
                    editDeviceFieldsContainer.appendChild(fieldInput);
                    editDeviceFieldsContainer.appendChild(document.createElement('br'));
                }
            });
        })
        .catch(error => console.error('Erreur lors de la récupération des champs :', error));

    document.getElementById('editDeviceModal').style.display = 'block';
}

// Fonction pour supprimer un device
function deleteDevice(modelName, deviceId) {
    if (confirm('Êtes-vous sûr de vouloir supprimer cet appareil ?')) {
        fetch('device_manage/delete_device.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `model_name=${encodeURIComponent(modelName)}&device_id=${encodeURIComponent(deviceId)}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Recharger la page pour mettre à jour la liste des appareils
                location.reload();
            } else {
                alert('Erreur lors de la suppression de l\'appareil : ' + data.error);
            }
        })
        .catch(error => console.error('Erreur lors de la suppression de l\'appareil :', error));
    }
}

// Fermer les modals en cliquant sur la croix ou en cliquant en dehors du modal
window.onclick = function(event) {
    if (event.target.classList.contains('modal')) {
        closeModal(event.target.id);
    }
}

// Ajouter un gestionnaire d'événement pour les boutons de fermeture dans les modals
document.querySelectorAll('.close').forEach(element => {
    element.addEventListener('click', () => {
        closeModal(element.closest('.modal').id);
    });
});



get_device_fields.php :
<?php
include 'db.php';

if (isset($_GET['model_name'])) {
    $model_name = $_GET['model_name'];
    $device_id = isset($_GET['device_id']) ? intval($_GET['device_id']) : null;

    // Assurez-vous que le nom du modèle est sécurisé pour éviter les injections SQL
    $model_name = $conn->real_escape_string($model_name);

    // Récupérer les colonnes de la table associée au modèle
    $query = "SHOW COLUMNS FROM `$model_name`";
    $result = $conn->query($query);

    $fields = [];
    if ($result) {
        while ($row = $result->fetch_assoc()) {
            // Exclure les colonnes `device_id` et `model_id`
            if ($row['Field'] !== 'device_id' && $row['Field'] !== 'model_id') {
                $fields[] = [
                    'name' => ucfirst(str_replace('_', ' ', $row['Field'])),
                    'column_name' => $row['Field']
                ];
            }
        }
    }

    // If editing a device, fetch its current values
    if ($device_id) {
        $device_query = "SELECT * FROM `$model_name` WHERE device_id = $device_id";
        $device_result = $conn->query($device_query);

        if ($device_result && $device_result->num_rows > 0) {
            $device_data = $device_result->fetch_assoc();
            foreach ($fields as &$field) {
                if (isset($device_data[$field['column_name']])) {
                    $field['value'] = $device_data[$field['column_name']];
                }
            }
        }
    }

    // Retourner les colonnes au format JSON
    header('Content-Type: application/json');
    echo json_encode($fields);
} else {
    echo json_encode([]);
}
?>


add_device.php :
<?php
include '../db.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $model_name = $_POST['model_name'];
    $device_name = $_POST['device_name'];
    $device_image = null;

    header('Content-Type: application/json');

    try {
        // Valider les entrées
        if (empty($model_name) || empty($device_name)) {
            echo json_encode(["error" => "Tous les champs requis ne sont pas remplis."]);
            exit();
        }

        // Récupérer le model_id à partir de la table models
        $stmt = $conn->prepare("SELECT model_id FROM models WHERE model_name = ?");
        $stmt->bind_param("s", $model_name);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows == 0) {
            echo json_encode(["error" => "Modèle non trouvé."]);
            exit();
        }

        $model_row = $result->fetch_assoc();
        $model_id = $model_row['model_id'];

        // Vérifier si le device existe déjà
        $stmt = $conn->prepare("SELECT * FROM `$model_name` WHERE device_name = ?");
        $stmt->bind_param("s", $device_name);
        $stmt->execute();
        $result = $stmt->get_result();

        if ($result->num_rows > 0) {
            echo json_encode(["error" => "L'appareil existe déjà !"]);
            exit();
        }

        // Gestion du téléchargement de l'image
        if (isset($_FILES['device_image']) && $_FILES['device_image']['error'] == 0) {
            $target_dir = "devices_image/"; // Assurez-vous que ce chemin est correct
            if (!is_dir($target_dir)) {
                mkdir($target_dir, 0777, true);
            }
            $target_file = $target_dir . basename($_FILES["device_image"]["name"]);

            if (!move_uploaded_file($_FILES["device_image"]["tmp_name"], $target_file)) {
                echo json_encode(["error" => "Désolé, une erreur est survenue lors du téléchargement de votre fichier."]);
                exit();
            }

            $device_image = $target_file;
        }

        // Construire la requête SQL pour insérer le nouveau device
        $sql = "INSERT INTO `$model_name` (`device_name`, `device_image`, `model_id`";
        $values = " VALUES (?, ?, ?";
        $params = [$device_name, $device_image, $model_id];
        $types = "ssi";

        foreach ($_POST as $key => $value) {
            if ($key != 'model_name' && $key != 'device_name') {
                // Utiliser des backticks pour les noms de colonnes et échapper les noms de colonnes
                $escaped_key = $conn->real_escape_string($key);
                $sql .= ", `$escaped_key`";
                $values .= ", ?";
                $params[] = $value;
                $types .= "s";
            }
        }

        $sql .= ")";
        $values .= ")";
        $sql .= $values;

        $stmt = $conn->prepare($sql);
        $stmt->bind_param($types, ...$params);

        if (!$stmt->execute()) {
            echo json_encode(["error" => "Erreur lors de l'ajout de l'appareil.", "sql_error" => $stmt->error]);
            exit();
        }

        echo json_encode(["success" => "Nouvel appareil ajouté avec succès."]);
    } catch (Exception $e) {
        echo json_encode(["error" => $e->getMessage()]);
    } finally {
        if (isset($stmt)) {
            $stmt->close();
        }
    }
} else {
    echo json_encode(["error" => "Requête non valide."]);
}
?>

update_device.php :
<?php
include '../db.php';

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $model_name = $_POST['model_name'];
    $device_id = $_POST['device_id'];
    $device_image = null;

    try {
        // Valider les entrées
        if (empty($model_name) || empty($device_id)) {
            throw new Exception("Erreur : Tous les champs requis ne sont pas remplis.");
        }

        // Gestion du téléchargement de l'image
        if (isset($_FILES['device_image']) && $_FILES['device_image']['error'] == 0) {
            $target_dir = "../devices_image/"; // Assurez-vous que ce chemin est correct
            if (!is_dir($target_dir)) {
                mkdir($target_dir, 0777, true);
            }
            $target_file = $target_dir . basename($_FILES["device_image"]["name"]);

            if (!move_uploaded_file($_FILES["device_image"]["tmp_name"], $target_file)) {
                throw new Exception("Désolé, une erreur est survenue lors du téléchargement de votre fichier.");
            }

            $device_image = $target_file;
        }

        // Construire la requête SQL pour mettre à jour l'appareil
        $sql = "UPDATE `$model_name` SET ";
        $params = [];
        $types = "";

        foreach ($_POST as $key => $value) {
            if ($key != 'model_name' && $key != 'device_id') {
                // Utiliser des backticks pour les noms de colonnes et échapper les noms de colonnes
                $escaped_key = $conn->real_escape_string($key);
                $sql .= "`$escaped_key` = ?, ";
                $params[] = $value;
                $types .= "s";
            }
        }

        if ($device_image) {
            $sql .= "`device_image` = ?, ";
            $params[] = $device_image;
            $types .= "s";
        }

        $sql = rtrim($sql, ', '); // Retirer la virgule finale
        $sql .= " WHERE `device_id` = ?";
        $params[] = $device_id;
        $types .= "i";

        $stmt = $conn->prepare($sql);
        $stmt->bind_param($types, ...$params);

        if (!$stmt->execute()) {
            throw new Exception("Erreur: " . $stmt->error);
        }

        echo "Appareil mis à jour avec succès.";
    } catch (Exception $e) {
        echo $e->getMessage();
    } finally {
        if (isset($stmt)) {
            $stmt->close();
        }
    }
} else {
    // Si la requête n'est pas un POST, envoyer une réponse vide
    echo json_encode([]);
}
?>

dashboard_Devices.css
body {
    font-family: 'Poppins', sans-serif;
}

.main-content {
    margin-left: 250px;
    padding: 20px;
}

.container {
    margin-left: 250px; /* Décalage pour laisser la place à la sidebar */
    padding: 20px;
}

h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 20px 0;
    color: #941462;
}

.model-section {
    margin-bottom: 20px;
}

.model-section h2 {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 1.5rem;
    color: #941462;
    margin: 20px 0;
}

.devices-list {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.devices-list li {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
    transition: background-color 0.3s ease;
}

.devices-list li:nth-child(even) {
    background-color: #f9f9f9;
}

.devices-list li:hover {
    background-color: #f1f1f1;
}

.device-image {
    width: 50px;
    height: 50px;
    margin-right: 10px;
    border-radius: 50%;
}

.device-name {
    flex-grow: 1;
    font-size: 1rem;
}

.add-btn, .edit-btn, .delete-btn {
    margin-left: 10px;
    padding: 10px 15px;
    border: none;
    color: white;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s ease;
}

.add-btn {
    background-color: #941462; /* Couleur de fond pour le bouton Add */
}

.add-btn:hover {
    background-color: #75114c;
}

.edit-btn {
    background-color: #007bff; /* Couleur de fond pour le bouton Edit */
}

.edit-btn:hover {
    background-color: #0056b3;
}

.delete-btn {
    background-color: #dc3545; /* Couleur de fond pour le bouton Delete */
}

.delete-btn:hover {
    background-color: #c82333;
}

/* Styles pour les tables */
table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
}

table th,
table td {
    padding: 15px;
    text-align: left;
    border-bottom: 1px solid #ddd;
}

table td img {
    max-width: 100%; /* Assurez-vous que les images ne dépassent pas les cellules */
    height: auto;
}

table tr:nth-child(even) {
    background-color: #f9f9f9;
}

table tr:hover {
    background-color: #f1f1f1;
}

.operations a {
    margin: 0 5px;
    cursor: pointer;
}

/* Styles pour le bouton Add */
.add-category input[type="submit"] {
    display: block;
    margin: 0 10px 10px auto;
    padding: 10px 20px;
    background-color: #941462; /* Couleur de fond */
    color: white; /* Texte blanc */
    border: none;
    border-radius: 15px;
    cursor: pointer; /* Curseur pointeur au survol */
    transition: transform 0.3s ease-in-out; /* Transition fluide */
}

.add-category input[type="submit"]:hover {
    background-color: #75114c;
}

/* Styles pour les fenêtres modales */
.modal {
    display: none; /* Hidden by default */
    position: fixed;
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

.modal-content {
    background-color: #fefefe;
    margin: 15% auto; /* 15% from the top and centered */
    padding: 20px;
    border: 1px solid #888;
    width: 80%; /* Could be more or less, depending on screen size */
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

/* Function to fetch devices based on the selected model
function fetchDevices() {
    const modelName = document.getElementById('model_name').value;

    if (!modelName) {
        document.getElementById('deviceList').innerHTML = '<p>Please select a model.</p>';
        return;
    }

    fetch('device_manage/get_device.php', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ model_name: modelName })
    })
    .then(response => response.json())
    .then(data => {
        if (data.error) {
            document.getElementById('deviceList').innerHTML = '<p>Error fetching devices: ' + data.error + '</p>';
        } else {
            let deviceListHtml = '<ul>';
            data.devices.forEach(device => {
                deviceListHtml += `
                    <li>
                        <img src="${device.device_image}" width="50" alt="Device Image">
                        <span>${device.device_name}</span>
                        <button onclick="showEditDeviceModal('${modelName}', ${device.device_id})">✏️</button>
                        <button onclick="deleteDevice('${modelName}', ${device.device_id})">🗑️</button>
                    </li>
                `;
            });
            deviceListHtml += '</ul>';
            document.getElementById('deviceList').innerHTML = deviceListHtml;
        }
    })
    .catch(error => {
        document.getElementById('deviceList').innerHTML = '<p>Error: ' + error.message + '</p>';
    });
}*/

// Function to show the Edit Device modal with fields based on model columns
/*function showEditDeviceModal(modelName, deviceId) {
    document.getElementById('edit_model_name').value = modelName;
    document.getElementById('edit_device_id').value = deviceId;
    const editDeviceFieldsContainer = document.getElementById('editDeviceFields');

    // Clear existing fields
    editDeviceFieldsContainer.innerHTML = '';

    // Fetch the fields of the device and existing values
    fetch(`device_manage/get_device_value.php?model_name=${encodeURIComponent(modelName)}&device_id=${deviceId}`)
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                alert('Error fetching fields: ' + data.error);
                return;
            }
            data.fields.forEach(field => {
                if (field.column_name !== 'device_id' && field.column_name !== 'model_id') {
                    const fieldLabel = document.createElement('label');
                    fieldLabel.textContent = field.name;
                    const fieldInput = document.createElement('input');
                    fieldInput.type = field.column_name === 'device_image' ? 'file' : 'text';
                    fieldInput.name = field.column_name;

                    if (field.column_name !== 'device_image' && field.value) {
                        fieldInput.value = field.value;
                    }

                    editDeviceFieldsContainer.appendChild(fieldLabel);
                    editDeviceFieldsContainer.appendChild(fieldInput);
                    editDeviceFieldsContainer.appendChild(document.createElement('br'));
                }
            });
        })
        .catch(error => console.error('Error fetching fields:', error));

    document.getElementById('editDeviceModal').style.display = 'block';
}*/


side_bar.php :
<head>
<link rel="stylesheet" href="side_bar.css">
</head>
<div id="sidebar" class="sidebar">
    <div class="content">
        <div class="logo">
            <img src="<?php echo htmlspecialchars($image); ?>" alt="Avatar user" class="avatar">
        </div>
        <div id="profile" class="profile">
            <img src="image\blank_profile.jpeg" alt="Avatar user" class="avatar">
            <div class="text">
            <h2 class="name"><?php echo htmlspecialchars($first_name . ' ' . $family_name); ?></h2>
            <p class="role">Administrator</p>
            </div>
        </div>
        <div id="menu" class="menu">
            <div class="menu-section">
                <div class="section-title">Account</div>
                <a href="admin_dashboard.php?page=account" class="menu-item">
                    <img src="icones/account.svg" alt="Account Icon">
                    <span><strong>My account</strong></span>
                </a>
                <a href="admin_dashboard.php?page=logout" class="menu-item">
                    <img src="icones/log_out.svg" alt="Log Out Icon">
                    <span><strong>Log out</strong></span>
                </a>
            </div>
            <div class="menu-section">
                <div class="section-title">Settings</div>
                <a href="admin_dashboard.php?page=categories" class="menu-item">
                    <img src="icones/category.svg" alt="Categories Icon">
                    <span><strong>Categories</strong></span>
                </a>
                <a href="admin_dashboard.php?page=models" class="menu-item">
                    <img src="icones/model.svg" alt="Models Icon">
                    <span><strong>Models</strong></span>
                </a>
                <a href="admin_dashboard.php?page=devices" class="menu-item">
                    <img src="icones/device.svg" alt="Devices Icon">
                    <span><strong>Devices</strong></span>
                </a>
            </div>
        </div>
    </div>
</div>

account.php :
<?php
@session_start();
include('db.php');

if (!isset($_SESSION['admin'])) {
    header('Location: login_admin.php');
    exit();
}

$admin_email = $_SESSION['admin'];
$error = '';
$success = '';

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (isset($_POST['update_account'])) {
        $first_name = $_POST['first_name'];
        $family_name = $_POST['family_name'];
        $email = $_POST['email'];

        // Mise à jour des détails de l'admin
        $update_sql = "UPDATE admin SET first_name = '$first_name', family_name = '$family_name', mail = '$email' WHERE mail = '$admin_email'";
        if (mysqli_query($conn, $update_sql)) {
            $success = 'Compte mis à jour avec succès';
            $_SESSION['admin'] = $email;
            $admin_email = $email;
        } else {
            $error = 'Erreur lors de la mise à jour du compte';
        }
    } elseif (isset($_POST['change_admin'])) {
        $new_email = $_POST['new_email'];
        $new_password = $_POST['new_password'];

        // Vérifier si le nouvel admin existe déjà
        $check_sql = "SELECT * FROM admin WHERE mail = '$new_email'";
        $check_result = mysqli_query($conn, $check_sql);

        if (mysqli_num_rows($check_result) > 0) {
            $error = 'Un compte avec cet email existe déjà';
        } else {
            $hashed_password = password_hash($new_password, PASSWORD_BCRYPT);

            // Supprimer l'ancien admin
            $delete_sql = "DELETE FROM admin WHERE mail = '$admin_email'";
            if (mysqli_query($conn, $delete_sql)) {
                // Ajouter le nouvel admin
                $insert_sql = "INSERT INTO admin (mail, password, first_name, family_name) VALUES ('$new_email', '$hashed_password', '', '')";
                if (mysqli_query($conn, $insert_sql)) {
                    $_SESSION['admin'] = $new_email;
                    $success = 'Admin changé avec succès';
                } else {
                    $error = 'Erreur lors de la création du nouvel admin';
                }
            } else {
                $error = 'Erreur lors de la suppression de l\'ancien admin';
            }
        }
    }
}

// Récupérer les détails actuels de l'admin
$admin_sql = "SELECT * FROM admin WHERE mail = '$admin_email'";
$admin_result = mysqli_query($conn, $admin_sql);
$admin = mysqli_fetch_assoc($admin_result);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestion du Compte Admin</title>
    <link rel="stylesheet" href="account.css">
</head>
<body>
    <div class="container">
        <?php if ($error): ?>
            <div class="error"><?php echo $error; ?></div>
        <?php endif; ?>
        <?php if ($success): ?>
            <div class="success"><?php echo $success; ?></div>
        <?php endif; ?>
        <form action="account.php" method="POST">
            <h3>Mettre à jour le compte</h3>
            <div class="input-group">
                <label for="first_name">Prénom:</label>
                <input type="text" id="first_name" name="first_name" value="<?php echo htmlspecialchars($admin['first_name']); ?>" required>
            </div>
            <div class="input-group">
                <label for="family_name">Nom de famille:</label>
                <input type="text" id="family_name" name="family_name" value="<?php echo htmlspecialchars($admin['family_name']); ?>" required>
            </div>
            <div class="input-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" value="<?php echo htmlspecialchars($admin['mail']); ?>" required>
            </div>
            <button type="submit" name="update_account">Mettre à jour</button>
        </form>

        <form action="account.php" method="POST">
            <h3>Changer d'admin</h3>
            <div class="input-group">
                <label for="new_email">Nouvel Email:</label>
                <input type="email" id="new_email" name="new_email" required>
            </div>
            <div class="input-group">
                <label for="new_password">Nouveau mot de passe:</label>
                <input type="password" id="new_password" name="new_password" required>
            </div>
            <button type="submit" name="change_admin">Changer d'admin</button>
        </form>
    </div>
</body>
</html>

account.php :
<?php
@session_start();
include('db.php');

if (!isset($_SESSION['admin'])) {
    header('Location: login_admin.php');
    exit();
}

$admin_email = $_SESSION['admin'];
$response = ['error' => '', 'success' => ''];

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (isset($_POST['update_account'])) {
        $first_name = mysqli_real_escape_string($conn, $_POST['first_name']);
        $family_name = mysqli_real_escape_string($conn, $_POST['family_name']);
        $email = mysqli_real_escape_string($conn, $_POST['email']);

        // Handle profile picture upload
        if (isset($_FILES['image']) && $_FILES['image']['error'] == 0) {
            $target_dir = "admin_profile/";
            $target_file = $target_dir . basename($_FILES["image"]["name"]);
            if (move_uploaded_file($_FILES["image"]["tmp_name"], $target_file)) {
                $image = $target_file;
            } else {
                $response['error'] = 'Error uploading profile picture';
            }
        } else {
            $image = null;
        }

        // Update admin details
        $update_sql = "UPDATE admin SET first_name = '$first_name', family_name = '$family_name', mail = '$email'";
        if ($image) {
            $update_sql .= ", image = '$image'";
        }
        $update_sql .= " WHERE mail = '$admin_email'";

        if (mysqli_query($conn, $update_sql)) {
            $response['success'] = 'Account updated successfully';
            $_SESSION['admin'] = $email;
            $admin_email = $email;
        } else {
            $response['error'] = 'Error updating account';
        }
    } elseif (isset($_POST['change_admin'])) {
        $new_email = mysqli_real_escape_string($conn, $_POST['new_email']);
        // Check if the new admin already exists
        $check_sql = "SELECT * FROM admin WHERE mail = '$new_email'";
        $check_result = mysqli_query($conn, $check_sql);

        if (mysqli_num_rows($check_result) > 0) {
            $response['error'] = 'An account with this email already exists';
        } else {
            // Delete the old admin
            $delete_sql = "DELETE FROM admin WHERE mail = '$admin_email'";
            if (mysqli_query($conn, $delete_sql)) {
                // Add the new admin
                $insert_sql = "INSERT INTO admin (mail, first_name, family_name) VALUES ('$new_email', 'Admin', 'Admin')";
                if (mysqli_query($conn, $insert_sql)) {
                    $_SESSION['admin'] = $new_email;
                    $response['success'] = 'Admin changed successfully';
                } else {
                    $response['error'] = 'Error creating new admin';
                }
            } else {
                $response['error'] = 'Error deleting old admin';
            }
        }
    }
}

// Retrieve current admin details
$admin_sql = "SELECT * FROM admin WHERE mail = '$admin_email'";
$admin_result = mysqli_query($conn, $admin_sql);
$admin = mysqli_fetch_assoc($admin_result);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Account Management</title>
    <link rel="stylesheet" href="account.css">
</head>
<body>
    <div class="container">
        <form action="account.php" method="POST" enctype="multipart/form-data">
            <h3>Update Account</h3>
            <?php if (!empty($response['error'])): ?>
                <div class="error"><?php echo $response['error']; ?></div>
            <?php endif; ?>
            <?php if (!empty($response['success'])): ?>
                <div class="success"><?php echo $response['success']; ?></div>
            <?php endif; ?>
            <div class="input-group">
                <label for="first_name">First Name:</label>
                <input type="text" id="first_name" name="first_name" value="<?php echo htmlspecialchars($admin['first_name']); ?>" >
            </div>
            <div class="input-group">
                <label for="family_name">Family Name:</label>
                <input type="text" id="family_name" name="family_name" value="<?php echo htmlspecialchars($admin['family_name']); ?>" >
            </div>
            <div class="input-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" value="<?php echo htmlspecialchars($admin['mail']); ?>" >
            </div>
            <div class="input-group">
                <label for="image">Profile Picture:</label>
                <input type="file" id="image" name="image" accept="image/*">
            </div>
            <button type="submit" name="update_account">Update</button>
        </form>

        <form action="account.php" method="POST">
            <h3>Change Admin</h3>
            <div class="input-group">
                <label for="new_email">New Email:</label>
                <input type="email" id="new_email" name="new_email" required>
            </div>
            <button type="submit" name="change_admin">Change Admin</button>
        </form>
    </div>
</body>
</html>

